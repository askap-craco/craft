#!/bin/bash -l
#SBATCH --ntasks=4
#SBATCH --ntasks-per-node=4
#SBATCH --time=36:00:00
#SBATCH --cluster=zeus
#SBATCH --partition=copyq
#SBATCH --mail-type=FAIL
#SBATCH --mail-user=keith.bannister@csiro.au
#SBATCH --output=/group/askap/askapops/craft/archive-logfiles/archivesb-%A_%a.out
#SBATCH --export=NONE

export CRAFT=/home/ban115/craft/craft/
#export PATH=$CRAFT/cuda-fdmt/cudafdmt/src:$CRAFT/python:$PATH:/home/ban115/bin:$CRAFT/jobs/:$PATH
#export PYTHONPATH=$CRAFT/python:$PYTHONPATH
NTASKS=$SLURM_TASKS_PER_NODE

#module swap PrgEnv-cray PrgEnv-gnu
#module load mpibash
module unload gcc/4.9.0
module load python/2.7.10 > /dev/null

echo `date` starting archiveSB with $@

CRAFTDATA=/scratch2/askap/askapops/craft/co/
OUTDIR=askap-craft/co
logfile=/group/askap/askapops/craft/archive-logfiles/archived_sbs.txt

for f in $@ ; do
    f=`basename $f`
    echo "ARCHIVING $f"
    dout=$CRAFTDATA/$f
    if [[ ! -d $dout ]]  ; then
	echo "$dout is not a directory. Skipping.."
	continue
    fi

    cd $dout
    tarname=contents.tar
    for scandir in */*/*/ ; do
	pushd $scandir
	metafile=`ls *00.fil.meta`
	echo Metafile is $metafile
	nfiles=`ls * | grep -v $tarname | wc -l`
	echo "Got $nfiles files that were not a tar file"
	if [[ -f $tarname ]] ; then
	    if [[ -f $metafile || $nfiles -ne 0 ]] ; then # leftover tarfile
		echo "removing leftover tarfile $tarname"
		rm -f $tarname
		rm -f $tarname.meta 
	    fi
	fi

	if [[ -f $metafile ]] ; then
	    echo "HACK: Copying metafile"
	    cp *00.fil.meta $tarname.meta
	fi
	echo "Taring files in $dout/$scandir"
	tar -c -v -f $tarname *
	tarerr=$?
	if [[ $tarerr == 0 ]] ; then
	    echo "Tar success. Deleting files"
	    ls * | grep -v $tarname | xargs rm -f
	    echo "Files deleted"
	else
	    echo "Tar failed in $scandir with error $tarerr. Quitting"
	    exit $tarerr
	fi

	popd
    done	

    pshell "cd $OUTDIR && import $dout"
    pshellerr=$?
    echo "PSHELL returned exit status: $pshellerr uploading $f"
    if [[ $pshellerr == 0 ]] ;  then
	echo "PSHELL finished successfully"
	echo $f >> $logfile
    else
	echo "PSHELL Failed with error code $pshellerr. Quitting"
	exit $pshellerr
    fi
    
done

echo `date` finished archiveSB
